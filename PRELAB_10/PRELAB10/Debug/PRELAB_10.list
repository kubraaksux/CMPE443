
PRELAB_10.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000418  080001f0  080001f0  000101f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000608  08000610  00010610  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000608  08000608  00010610  2**0
                  CONTENTS
  4 .ARM          00000000  08000608  08000608  00010610  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000608  08000610  00010610  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000608  08000608  00010608  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800060c  0800060c  0001060c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010610  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000000  08000610  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  08000610  00020020  2**0
                  ALLOC
 11 .ARM.attributes 00000036  00000000  00000000  00010610  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000424  00000000  00000000  00010646  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000e7  00000000  00000000  00010a6a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000060  00000000  00000000  00010b58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000048  00000000  00000000  00010bb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000fa0  00000000  00000000  00010c00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000530  00000000  00000000  00011ba0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003f26  00000000  00000000  000120d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00015ff6  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000b4  00000000  00000000  00016048  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001f0 <__do_global_dtors_aux>:
 80001f0:	b510      	push	{r4, lr}
 80001f2:	4c05      	ldr	r4, [pc, #20]	; (8000208 <__do_global_dtors_aux+0x18>)
 80001f4:	7823      	ldrb	r3, [r4, #0]
 80001f6:	b933      	cbnz	r3, 8000206 <__do_global_dtors_aux+0x16>
 80001f8:	4b04      	ldr	r3, [pc, #16]	; (800020c <__do_global_dtors_aux+0x1c>)
 80001fa:	b113      	cbz	r3, 8000202 <__do_global_dtors_aux+0x12>
 80001fc:	4804      	ldr	r0, [pc, #16]	; (8000210 <__do_global_dtors_aux+0x20>)
 80001fe:	e000      	b.n	8000202 <__do_global_dtors_aux+0x12>
 8000200:	bf00      	nop
 8000202:	2301      	movs	r3, #1
 8000204:	7023      	strb	r3, [r4, #0]
 8000206:	bd10      	pop	{r4, pc}
 8000208:	20000000 	.word	0x20000000
 800020c:	00000000 	.word	0x00000000
 8000210:	080005f0 	.word	0x080005f0

08000214 <frame_dummy>:
 8000214:	b508      	push	{r3, lr}
 8000216:	4b03      	ldr	r3, [pc, #12]	; (8000224 <frame_dummy+0x10>)
 8000218:	b11b      	cbz	r3, 8000222 <frame_dummy+0xe>
 800021a:	4903      	ldr	r1, [pc, #12]	; (8000228 <frame_dummy+0x14>)
 800021c:	4803      	ldr	r0, [pc, #12]	; (800022c <frame_dummy+0x18>)
 800021e:	e000      	b.n	8000222 <frame_dummy+0xe>
 8000220:	bf00      	nop
 8000222:	bd08      	pop	{r3, pc}
 8000224:	00000000 	.word	0x00000000
 8000228:	20000004 	.word	0x20000004
 800022c:	080005f0 	.word	0x080005f0

08000230 <LPUART1_IRQHandler>:

#define NVIC_ISER2 *((volatile uint32_t *) 0xE000E108)
#define NVIC_ISER1 *((volatile uint32_t *) 0xE000E104)


void LPUART1_IRQHandler() {
 8000230:	b480      	push	{r7}
 8000232:	af00      	add	r7, sp, #0
	LPUART_ICR |= (1<<6);
 8000234:	4b05      	ldr	r3, [pc, #20]	; (800024c <LPUART1_IRQHandler+0x1c>)
 8000236:	681b      	ldr	r3, [r3, #0]
 8000238:	4a04      	ldr	r2, [pc, #16]	; (800024c <LPUART1_IRQHandler+0x1c>)
 800023a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800023e:	6013      	str	r3, [r2, #0]
}
 8000240:	bf00      	nop
 8000242:	46bd      	mov	sp, r7
 8000244:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000248:	4770      	bx	lr
 800024a:	bf00      	nop
 800024c:	40008020 	.word	0x40008020

08000250 <ADC1_2_IRQHandler>:

int ADC_val = 0;

void ADC1_2_IRQHandler() {
 8000250:	b480      	push	{r7}
 8000252:	af00      	add	r7, sp, #0

	ADC_val = ADC->DR;
 8000254:	4b07      	ldr	r3, [pc, #28]	; (8000274 <ADC1_2_IRQHandler+0x24>)
 8000256:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000258:	461a      	mov	r2, r3
 800025a:	4b07      	ldr	r3, [pc, #28]	; (8000278 <ADC1_2_IRQHandler+0x28>)
 800025c:	601a      	str	r2, [r3, #0]
	ADC->CR |= (1<<2);
 800025e:	4b05      	ldr	r3, [pc, #20]	; (8000274 <ADC1_2_IRQHandler+0x24>)
 8000260:	689b      	ldr	r3, [r3, #8]
 8000262:	4a04      	ldr	r2, [pc, #16]	; (8000274 <ADC1_2_IRQHandler+0x24>)
 8000264:	f043 0304 	orr.w	r3, r3, #4
 8000268:	6093      	str	r3, [r2, #8]
}
 800026a:	bf00      	nop
 800026c:	46bd      	mov	sp, r7
 800026e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000272:	4770      	bx	lr
 8000274:	42028000 	.word	0x42028000
 8000278:	2000001c 	.word	0x2000001c

0800027c <TIM7_IRQHandler>:

void TIM7_IRQHandler(void){
 800027c:	b480      	push	{r7}
 800027e:	af00      	add	r7, sp, #0
	TIM7->SR &= ~(0X01);
 8000280:	4b31      	ldr	r3, [pc, #196]	; (8000348 <TIM7_IRQHandler+0xcc>)
 8000282:	691b      	ldr	r3, [r3, #16]
 8000284:	4a30      	ldr	r2, [pc, #192]	; (8000348 <TIM7_IRQHandler+0xcc>)
 8000286:	f023 0301 	bic.w	r3, r3, #1
 800028a:	6113      	str	r3, [r2, #16]
	LPUART_TDR =(ADC_val/1000)%10 + '0';
 800028c:	4b2f      	ldr	r3, [pc, #188]	; (800034c <TIM7_IRQHandler+0xd0>)
 800028e:	681b      	ldr	r3, [r3, #0]
 8000290:	4a2f      	ldr	r2, [pc, #188]	; (8000350 <TIM7_IRQHandler+0xd4>)
 8000292:	fb82 1203 	smull	r1, r2, r2, r3
 8000296:	1192      	asrs	r2, r2, #6
 8000298:	17db      	asrs	r3, r3, #31
 800029a:	1ad1      	subs	r1, r2, r3
 800029c:	4b2d      	ldr	r3, [pc, #180]	; (8000354 <TIM7_IRQHandler+0xd8>)
 800029e:	fb83 2301 	smull	r2, r3, r3, r1
 80002a2:	109a      	asrs	r2, r3, #2
 80002a4:	17cb      	asrs	r3, r1, #31
 80002a6:	1ad2      	subs	r2, r2, r3
 80002a8:	4613      	mov	r3, r2
 80002aa:	009b      	lsls	r3, r3, #2
 80002ac:	4413      	add	r3, r2
 80002ae:	005b      	lsls	r3, r3, #1
 80002b0:	1aca      	subs	r2, r1, r3
 80002b2:	3230      	adds	r2, #48	; 0x30
 80002b4:	4b28      	ldr	r3, [pc, #160]	; (8000358 <TIM7_IRQHandler+0xdc>)
 80002b6:	601a      	str	r2, [r3, #0]
	LPUART_TDR =(ADC_val/100)%10 + '0';
 80002b8:	4b24      	ldr	r3, [pc, #144]	; (800034c <TIM7_IRQHandler+0xd0>)
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	4a27      	ldr	r2, [pc, #156]	; (800035c <TIM7_IRQHandler+0xe0>)
 80002be:	fb82 1203 	smull	r1, r2, r2, r3
 80002c2:	1152      	asrs	r2, r2, #5
 80002c4:	17db      	asrs	r3, r3, #31
 80002c6:	1ad1      	subs	r1, r2, r3
 80002c8:	4b22      	ldr	r3, [pc, #136]	; (8000354 <TIM7_IRQHandler+0xd8>)
 80002ca:	fb83 2301 	smull	r2, r3, r3, r1
 80002ce:	109a      	asrs	r2, r3, #2
 80002d0:	17cb      	asrs	r3, r1, #31
 80002d2:	1ad2      	subs	r2, r2, r3
 80002d4:	4613      	mov	r3, r2
 80002d6:	009b      	lsls	r3, r3, #2
 80002d8:	4413      	add	r3, r2
 80002da:	005b      	lsls	r3, r3, #1
 80002dc:	1aca      	subs	r2, r1, r3
 80002de:	3230      	adds	r2, #48	; 0x30
 80002e0:	4b1d      	ldr	r3, [pc, #116]	; (8000358 <TIM7_IRQHandler+0xdc>)
 80002e2:	601a      	str	r2, [r3, #0]
	LPUART_TDR =(ADC_val/10)%10 + '0';
 80002e4:	4b19      	ldr	r3, [pc, #100]	; (800034c <TIM7_IRQHandler+0xd0>)
 80002e6:	681b      	ldr	r3, [r3, #0]
 80002e8:	4a1a      	ldr	r2, [pc, #104]	; (8000354 <TIM7_IRQHandler+0xd8>)
 80002ea:	fb82 1203 	smull	r1, r2, r2, r3
 80002ee:	1092      	asrs	r2, r2, #2
 80002f0:	17db      	asrs	r3, r3, #31
 80002f2:	1ad1      	subs	r1, r2, r3
 80002f4:	4b17      	ldr	r3, [pc, #92]	; (8000354 <TIM7_IRQHandler+0xd8>)
 80002f6:	fb83 2301 	smull	r2, r3, r3, r1
 80002fa:	109a      	asrs	r2, r3, #2
 80002fc:	17cb      	asrs	r3, r1, #31
 80002fe:	1ad2      	subs	r2, r2, r3
 8000300:	4613      	mov	r3, r2
 8000302:	009b      	lsls	r3, r3, #2
 8000304:	4413      	add	r3, r2
 8000306:	005b      	lsls	r3, r3, #1
 8000308:	1aca      	subs	r2, r1, r3
 800030a:	3230      	adds	r2, #48	; 0x30
 800030c:	4b12      	ldr	r3, [pc, #72]	; (8000358 <TIM7_IRQHandler+0xdc>)
 800030e:	601a      	str	r2, [r3, #0]
	LPUART_TDR = ADC_val%10 + '0';
 8000310:	4b0e      	ldr	r3, [pc, #56]	; (800034c <TIM7_IRQHandler+0xd0>)
 8000312:	6819      	ldr	r1, [r3, #0]
 8000314:	4b0f      	ldr	r3, [pc, #60]	; (8000354 <TIM7_IRQHandler+0xd8>)
 8000316:	fb83 2301 	smull	r2, r3, r3, r1
 800031a:	109a      	asrs	r2, r3, #2
 800031c:	17cb      	asrs	r3, r1, #31
 800031e:	1ad2      	subs	r2, r2, r3
 8000320:	4613      	mov	r3, r2
 8000322:	009b      	lsls	r3, r3, #2
 8000324:	4413      	add	r3, r2
 8000326:	005b      	lsls	r3, r3, #1
 8000328:	1aca      	subs	r2, r1, r3
 800032a:	3230      	adds	r2, #48	; 0x30
 800032c:	4b0a      	ldr	r3, [pc, #40]	; (8000358 <TIM7_IRQHandler+0xdc>)
 800032e:	601a      	str	r2, [r3, #0]


	LPUART_TDR = '\r';
 8000330:	4b09      	ldr	r3, [pc, #36]	; (8000358 <TIM7_IRQHandler+0xdc>)
 8000332:	220d      	movs	r2, #13
 8000334:	601a      	str	r2, [r3, #0]
	LPUART_TDR = '\n';
 8000336:	4b08      	ldr	r3, [pc, #32]	; (8000358 <TIM7_IRQHandler+0xdc>)
 8000338:	220a      	movs	r2, #10
 800033a:	601a      	str	r2, [r3, #0]


}
 800033c:	bf00      	nop
 800033e:	46bd      	mov	sp, r7
 8000340:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000344:	4770      	bx	lr
 8000346:	bf00      	nop
 8000348:	40001400 	.word	0x40001400
 800034c:	2000001c 	.word	0x2000001c
 8000350:	10624dd3 	.word	0x10624dd3
 8000354:	66666667 	.word	0x66666667
 8000358:	40008028 	.word	0x40008028
 800035c:	51eb851f 	.word	0x51eb851f

08000360 <main>:



int main(void) {
 8000360:	b480      	push	{r7}
 8000362:	af00      	add	r7, sp, #0

	RCC_APB1ENR1 |= (1<<5);	// tim 7 clock active
 8000364:	4b6c      	ldr	r3, [pc, #432]	; (8000518 <main+0x1b8>)
 8000366:	681b      	ldr	r3, [r3, #0]
 8000368:	4a6b      	ldr	r2, [pc, #428]	; (8000518 <main+0x1b8>)
 800036a:	f043 0320 	orr.w	r3, r3, #32
 800036e:	6013      	str	r3, [r2, #0]
	// tim7 initialize (1 second timer)
	NVIC_ISER1 |= (0x01<<18);
 8000370:	4b6a      	ldr	r3, [pc, #424]	; (800051c <main+0x1bc>)
 8000372:	681b      	ldr	r3, [r3, #0]
 8000374:	4a69      	ldr	r2, [pc, #420]	; (800051c <main+0x1bc>)
 8000376:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800037a:	6013      	str	r3, [r2, #0]
	TIM7->DIER |= 0x01;  	// update interrupt aç
 800037c:	4b68      	ldr	r3, [pc, #416]	; (8000520 <main+0x1c0>)
 800037e:	68db      	ldr	r3, [r3, #12]
 8000380:	4a67      	ldr	r2, [pc, #412]	; (8000520 <main+0x1c0>)
 8000382:	f043 0301 	orr.w	r3, r3, #1
 8000386:	60d3      	str	r3, [r2, #12]
	TIM7->EGR  |= 0x01; 	// interrupt yarat ve timer 0 la
 8000388:	4b65      	ldr	r3, [pc, #404]	; (8000520 <main+0x1c0>)
 800038a:	695b      	ldr	r3, [r3, #20]
 800038c:	4a64      	ldr	r2, [pc, #400]	; (8000520 <main+0x1c0>)
 800038e:	f043 0301 	orr.w	r3, r3, #1
 8000392:	6153      	str	r3, [r2, #20]
	TIM7->PSC = 3999; 		// 4MHZ/(3999+1)= 1KHZ ->>>> HER COUNTER 1 MS
 8000394:	4b62      	ldr	r3, [pc, #392]	; (8000520 <main+0x1c0>)
 8000396:	f640 729f 	movw	r2, #3999	; 0xf9f
 800039a:	629a      	str	r2, [r3, #40]	; 0x28
	TIM7->ARR = 499; 		// 999+1= 1 S . 1HZ --->> INTERRUPT EVERY S
 800039c:	4b60      	ldr	r3, [pc, #384]	; (8000520 <main+0x1c0>)
 800039e:	f240 12f3 	movw	r2, #499	; 0x1f3
 80003a2:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM7->CR1 |= 0x01;		// timer counterını başlat
 80003a4:	4b5e      	ldr	r3, [pc, #376]	; (8000520 <main+0x1c0>)
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	4a5d      	ldr	r2, [pc, #372]	; (8000520 <main+0x1c0>)
 80003aa:	f043 0301 	orr.w	r3, r3, #1
 80003ae:	6013      	str	r3, [r2, #0]


	//Enable Clock for Power Interface
	RCC_APB1ENR1 |= (1<<28);
 80003b0:	4b59      	ldr	r3, [pc, #356]	; (8000518 <main+0x1b8>)
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	4a58      	ldr	r2, [pc, #352]	; (8000518 <main+0x1b8>)
 80003b6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80003ba:	6013      	str	r3, [r2, #0]

	//Change the regulator mode to Low-power mode
	PWR_CR1 |= (1<<14);
 80003bc:	4b59      	ldr	r3, [pc, #356]	; (8000524 <main+0x1c4>)
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	4a58      	ldr	r2, [pc, #352]	; (8000524 <main+0x1c4>)
 80003c2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80003c6:	6013      	str	r3, [r2, #0]
	//RCC_CR |= 1<<6;
	//RCC_CR &= ~(1<<5);
	//RCC_CR |= 1<<4;

	//Make VDDIO2 valid
	PWR_CR2|= (1<<9);
 80003c8:	4b57      	ldr	r3, [pc, #348]	; (8000528 <main+0x1c8>)
 80003ca:	681b      	ldr	r3, [r3, #0]
 80003cc:	4a56      	ldr	r2, [pc, #344]	; (8000528 <main+0x1c8>)
 80003ce:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80003d2:	6013      	str	r3, [r2, #0]

	//Change the clock source of Low-power UART to SYSCLK
	RCC_CCIPR1 |= (1<<10);
 80003d4:	4b55      	ldr	r3, [pc, #340]	; (800052c <main+0x1cc>)
 80003d6:	681b      	ldr	r3, [r3, #0]
 80003d8:	4a54      	ldr	r2, [pc, #336]	; (800052c <main+0x1cc>)
 80003da:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80003de:	6013      	str	r3, [r2, #0]

	//Enable Clock for Low-power UART
	RCC_APB1ENR2 |= (1<<0);
 80003e0:	4b53      	ldr	r3, [pc, #332]	; (8000530 <main+0x1d0>)
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	4a52      	ldr	r2, [pc, #328]	; (8000530 <main+0x1d0>)
 80003e6:	f043 0301 	orr.w	r3, r3, #1
 80003ea:	6013      	str	r3, [r2, #0]

	//Enable Clock for GPIO
	RCC_AHB2ENR |= (1<<6);
 80003ec:	4b51      	ldr	r3, [pc, #324]	; (8000534 <main+0x1d4>)
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	4a50      	ldr	r2, [pc, #320]	; (8000534 <main+0x1d4>)
 80003f2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003f6:	6013      	str	r3, [r2, #0]

	//Change the functionality of the pin
	GPIOG->MODER |= 1<<15;
 80003f8:	4b4f      	ldr	r3, [pc, #316]	; (8000538 <main+0x1d8>)
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	4a4e      	ldr	r2, [pc, #312]	; (8000538 <main+0x1d8>)
 80003fe:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000402:	6013      	str	r3, [r2, #0]
	GPIOG->MODER &= ~(1<<14);
 8000404:	4b4c      	ldr	r3, [pc, #304]	; (8000538 <main+0x1d8>)
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	4a4b      	ldr	r2, [pc, #300]	; (8000538 <main+0x1d8>)
 800040a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800040e:	6013      	str	r3, [r2, #0]
	GPIOG->AFRL |=  (1<<31);
 8000410:	4b49      	ldr	r3, [pc, #292]	; (8000538 <main+0x1d8>)
 8000412:	6a1b      	ldr	r3, [r3, #32]
 8000414:	4a48      	ldr	r2, [pc, #288]	; (8000538 <main+0x1d8>)
 8000416:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800041a:	6213      	str	r3, [r2, #32]
	//GPIOG->AFRL |=  ~(1<<29);
	//GPIOG->AFRL |=  ~(1<<28);


	//Change LPUART baud rate (BRR) for 9600 Baud rate
	LPUART_BRR = 106666;
 800041c:	4b47      	ldr	r3, [pc, #284]	; (800053c <main+0x1dc>)
 800041e:	4a48      	ldr	r2, [pc, #288]	; (8000540 <main+0x1e0>)
 8000420:	601a      	str	r2, [r3, #0]


	//Enable FIFO mode for UART
	LPUART_CR1 |= (1<<29);
 8000422:	4b48      	ldr	r3, [pc, #288]	; (8000544 <main+0x1e4>)
 8000424:	681b      	ldr	r3, [r3, #0]
 8000426:	4a47      	ldr	r2, [pc, #284]	; (8000544 <main+0x1e4>)
 8000428:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800042c:	6013      	str	r3, [r2, #0]

	//Enable Transmitter and Receiver for UART
	LPUART_CR1 |= (1<<2);
 800042e:	4b45      	ldr	r3, [pc, #276]	; (8000544 <main+0x1e4>)
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	4a44      	ldr	r2, [pc, #272]	; (8000544 <main+0x1e4>)
 8000434:	f043 0304 	orr.w	r3, r3, #4
 8000438:	6013      	str	r3, [r2, #0]
	LPUART_CR1 |= (1<<3);
 800043a:	4b42      	ldr	r3, [pc, #264]	; (8000544 <main+0x1e4>)
 800043c:	681b      	ldr	r3, [r3, #0]
 800043e:	4a41      	ldr	r2, [pc, #260]	; (8000544 <main+0x1e4>)
 8000440:	f043 0308 	orr.w	r3, r3, #8
 8000444:	6013      	str	r3, [r2, #0]

	//Enable Interrupt and LPUART
	NVIC_ISER2 |= 1<<2;
 8000446:	4b40      	ldr	r3, [pc, #256]	; (8000548 <main+0x1e8>)
 8000448:	681b      	ldr	r3, [r3, #0]
 800044a:	4a3f      	ldr	r2, [pc, #252]	; (8000548 <main+0x1e8>)
 800044c:	f043 0304 	orr.w	r3, r3, #4
 8000450:	6013      	str	r3, [r2, #0]
	LPUART_CR1 |= (1<<0);
 8000452:	4b3c      	ldr	r3, [pc, #240]	; (8000544 <main+0x1e4>)
 8000454:	681b      	ldr	r3, [r3, #0]
 8000456:	4a3b      	ldr	r2, [pc, #236]	; (8000544 <main+0x1e4>)
 8000458:	f043 0301 	orr.w	r3, r3, #1
 800045c:	6013      	str	r3, [r2, #0]
	LPUART_CR1 |= 1<<6;
 800045e:	4b39      	ldr	r3, [pc, #228]	; (8000544 <main+0x1e4>)
 8000460:	681b      	ldr	r3, [r3, #0]
 8000462:	4a38      	ldr	r2, [pc, #224]	; (8000544 <main+0x1e4>)
 8000464:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000468:	6013      	str	r3, [r2, #0]

//Enable Clock for ADC
	RCC_AHB2ENR |= (1<<13);
 800046a:	4b32      	ldr	r3, [pc, #200]	; (8000534 <main+0x1d4>)
 800046c:	681b      	ldr	r3, [r3, #0]
 800046e:	4a31      	ldr	r2, [pc, #196]	; (8000534 <main+0x1d4>)
 8000470:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000474:	6013      	str	r3, [r2, #0]

	//Select ADC clock as System clock
	RCC_CCIPR1 |= (3<<28);
 8000476:	4b2d      	ldr	r3, [pc, #180]	; (800052c <main+0x1cc>)
 8000478:	681b      	ldr	r3, [r3, #0]
 800047a:	4a2c      	ldr	r2, [pc, #176]	; (800052c <main+0x1cc>)
 800047c:	f043 5340 	orr.w	r3, r3, #805306368	; 0x30000000
 8000480:	6013      	str	r3, [r2, #0]

	//Change Pin Mode to Analog
	GPIOA->MODER |= 3;
 8000482:	4b32      	ldr	r3, [pc, #200]	; (800054c <main+0x1ec>)
 8000484:	681b      	ldr	r3, [r3, #0]
 8000486:	4a31      	ldr	r2, [pc, #196]	; (800054c <main+0x1ec>)
 8000488:	f043 0303 	orr.w	r3, r3, #3
 800048c:	6013      	str	r3, [r2, #0]

	//Change Pin Pull/Down to no pull-up no pull-down
	GPIOA->PUPDR &= ~(0x03);
 800048e:	4b2f      	ldr	r3, [pc, #188]	; (800054c <main+0x1ec>)
 8000490:	68db      	ldr	r3, [r3, #12]
 8000492:	4a2e      	ldr	r2, [pc, #184]	; (800054c <main+0x1ec>)
 8000494:	f023 0303 	bic.w	r3, r3, #3
 8000498:	60d3      	str	r3, [r2, #12]

	//Change Regular channel sequence length to 1 conversion
	ADC->SQR1 &= ~(15);
 800049a:	4b2d      	ldr	r3, [pc, #180]	; (8000550 <main+0x1f0>)
 800049c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800049e:	4a2c      	ldr	r2, [pc, #176]	; (8000550 <main+0x1f0>)
 80004a0:	f023 030f 	bic.w	r3, r3, #15
 80004a4:	6313      	str	r3, [r2, #48]	; 0x30

	//Add to channel to first sequence
	ADC->SQR1 |= (0x05<<6);  ////sqr pa 0ın channeli 5
 80004a6:	4b2a      	ldr	r3, [pc, #168]	; (8000550 <main+0x1f0>)
 80004a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004aa:	4a29      	ldr	r2, [pc, #164]	; (8000550 <main+0x1f0>)
 80004ac:	f443 73a0 	orr.w	r3, r3, #320	; 0x140
 80004b0:	6313      	str	r3, [r2, #48]	; 0x30
	//sqr

	//Enable ADC Voltage regulator
	ADC->CR &= ~(1<<29);
 80004b2:	4b27      	ldr	r3, [pc, #156]	; (8000550 <main+0x1f0>)
 80004b4:	689b      	ldr	r3, [r3, #8]
 80004b6:	4a26      	ldr	r2, [pc, #152]	; (8000550 <main+0x1f0>)
 80004b8:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
 80004bc:	6093      	str	r3, [r2, #8]

	//Disable Deep-power-down for ADC
	ADC->CR |= (1<<28);
 80004be:	4b24      	ldr	r3, [pc, #144]	; (8000550 <main+0x1f0>)
 80004c0:	689b      	ldr	r3, [r3, #8]
 80004c2:	4a23      	ldr	r2, [pc, #140]	; (8000550 <main+0x1f0>)
 80004c4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80004c8:	6093      	str	r3, [r2, #8]

	//Configure for Single conversion mode
	ADC->CFGR &= ~(1<<13);
 80004ca:	4b21      	ldr	r3, [pc, #132]	; (8000550 <main+0x1f0>)
 80004cc:	68db      	ldr	r3, [r3, #12]
 80004ce:	4a20      	ldr	r2, [pc, #128]	; (8000550 <main+0x1f0>)
 80004d0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80004d4:	60d3      	str	r3, [r2, #12]

	//Enable ADC
	ADC->CR |= 1;
 80004d6:	4b1e      	ldr	r3, [pc, #120]	; (8000550 <main+0x1f0>)
 80004d8:	689b      	ldr	r3, [r3, #8]
 80004da:	4a1d      	ldr	r2, [pc, #116]	; (8000550 <main+0x1f0>)
 80004dc:	f043 0301 	orr.w	r3, r3, #1
 80004e0:	6093      	str	r3, [r2, #8]


	//Wait ADC is enabled
	while(!(ADC->ISR &1));
 80004e2:	bf00      	nop
 80004e4:	4b1a      	ldr	r3, [pc, #104]	; (8000550 <main+0x1f0>)
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	f003 0301 	and.w	r3, r3, #1
 80004ec:	2b00      	cmp	r3, #0
 80004ee:	d0f9      	beq.n	80004e4 <main+0x184>

	//Enable interrupt for end of regular conversion
	ADC->IER |= (1<<2);
 80004f0:	4b17      	ldr	r3, [pc, #92]	; (8000550 <main+0x1f0>)
 80004f2:	685b      	ldr	r3, [r3, #4]
 80004f4:	4a16      	ldr	r2, [pc, #88]	; (8000550 <main+0x1f0>)
 80004f6:	f043 0304 	orr.w	r3, r3, #4
 80004fa:	6053      	str	r3, [r2, #4]
	NVIC_ISER1 |= (0x01<<5);// Enable IRQ for ADC
 80004fc:	4b07      	ldr	r3, [pc, #28]	; (800051c <main+0x1bc>)
 80004fe:	681b      	ldr	r3, [r3, #0]
 8000500:	4a06      	ldr	r2, [pc, #24]	; (800051c <main+0x1bc>)
 8000502:	f043 0320 	orr.w	r3, r3, #32
 8000506:	6013      	str	r3, [r2, #0]

	//Start regular conversion of ADC
	ADC->CR |= (1<<2);
 8000508:	4b11      	ldr	r3, [pc, #68]	; (8000550 <main+0x1f0>)
 800050a:	689b      	ldr	r3, [r3, #8]
 800050c:	4a10      	ldr	r2, [pc, #64]	; (8000550 <main+0x1f0>)
 800050e:	f043 0304 	orr.w	r3, r3, #4
 8000512:	6093      	str	r3, [r2, #8]


	while(1){
 8000514:	e7fe      	b.n	8000514 <main+0x1b4>
 8000516:	bf00      	nop
 8000518:	40021058 	.word	0x40021058
 800051c:	e000e104 	.word	0xe000e104
 8000520:	40001400 	.word	0x40001400
 8000524:	40007000 	.word	0x40007000
 8000528:	40007004 	.word	0x40007004
 800052c:	40021088 	.word	0x40021088
 8000530:	4002105c 	.word	0x4002105c
 8000534:	4002104c 	.word	0x4002104c
 8000538:	42021800 	.word	0x42021800
 800053c:	4000800c 	.word	0x4000800c
 8000540:	0001a0aa 	.word	0x0001a0aa
 8000544:	40008000 	.word	0x40008000
 8000548:	e000e108 	.word	0xe000e108
 800054c:	42020000 	.word	0x42020000
 8000550:	42028000 	.word	0x42028000

08000554 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000554:	480d      	ldr	r0, [pc, #52]	; (800058c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000556:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000558:	e000      	b.n	800055c <Reset_Handler+0x8>
 800055a:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800055c:	480c      	ldr	r0, [pc, #48]	; (8000590 <LoopForever+0x6>)
  ldr r1, =_edata
 800055e:	490d      	ldr	r1, [pc, #52]	; (8000594 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000560:	4a0d      	ldr	r2, [pc, #52]	; (8000598 <LoopForever+0xe>)
  movs r3, #0
 8000562:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000564:	e002      	b.n	800056c <LoopCopyDataInit>

08000566 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000566:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000568:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800056a:	3304      	adds	r3, #4

0800056c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800056c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800056e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000570:	d3f9      	bcc.n	8000566 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000572:	4a0a      	ldr	r2, [pc, #40]	; (800059c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000574:	4c0a      	ldr	r4, [pc, #40]	; (80005a0 <LoopForever+0x16>)
  movs r3, #0
 8000576:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000578:	e001      	b.n	800057e <LoopFillZerobss>

0800057a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800057a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800057c:	3204      	adds	r2, #4

0800057e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800057e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000580:	d3fb      	bcc.n	800057a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000582:	f000 f811 	bl	80005a8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000586:	f7ff feeb 	bl	8000360 <main>

0800058a <LoopForever>:

LoopForever:
    b LoopForever
 800058a:	e7fe      	b.n	800058a <LoopForever>
  ldr   r0, =_estack
 800058c:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 8000590:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000594:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000598:	08000610 	.word	0x08000610
  ldr r2, =_sbss
 800059c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80005a0:	20000020 	.word	0x20000020

080005a4 <BusFault_Handler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005a4:	e7fe      	b.n	80005a4 <BusFault_Handler>
	...

080005a8 <__libc_init_array>:
 80005a8:	b570      	push	{r4, r5, r6, lr}
 80005aa:	4d0d      	ldr	r5, [pc, #52]	; (80005e0 <__libc_init_array+0x38>)
 80005ac:	2600      	movs	r6, #0
 80005ae:	4c0d      	ldr	r4, [pc, #52]	; (80005e4 <__libc_init_array+0x3c>)
 80005b0:	1b64      	subs	r4, r4, r5
 80005b2:	10a4      	asrs	r4, r4, #2
 80005b4:	42a6      	cmp	r6, r4
 80005b6:	d109      	bne.n	80005cc <__libc_init_array+0x24>
 80005b8:	4d0b      	ldr	r5, [pc, #44]	; (80005e8 <__libc_init_array+0x40>)
 80005ba:	2600      	movs	r6, #0
 80005bc:	4c0b      	ldr	r4, [pc, #44]	; (80005ec <__libc_init_array+0x44>)
 80005be:	f000 f817 	bl	80005f0 <_init>
 80005c2:	1b64      	subs	r4, r4, r5
 80005c4:	10a4      	asrs	r4, r4, #2
 80005c6:	42a6      	cmp	r6, r4
 80005c8:	d105      	bne.n	80005d6 <__libc_init_array+0x2e>
 80005ca:	bd70      	pop	{r4, r5, r6, pc}
 80005cc:	f855 3b04 	ldr.w	r3, [r5], #4
 80005d0:	3601      	adds	r6, #1
 80005d2:	4798      	blx	r3
 80005d4:	e7ee      	b.n	80005b4 <__libc_init_array+0xc>
 80005d6:	f855 3b04 	ldr.w	r3, [r5], #4
 80005da:	3601      	adds	r6, #1
 80005dc:	4798      	blx	r3
 80005de:	e7f2      	b.n	80005c6 <__libc_init_array+0x1e>
 80005e0:	08000608 	.word	0x08000608
 80005e4:	08000608 	.word	0x08000608
 80005e8:	08000608 	.word	0x08000608
 80005ec:	0800060c 	.word	0x0800060c

080005f0 <_init>:
 80005f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005f2:	bf00      	nop
 80005f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005f6:	bc08      	pop	{r3}
 80005f8:	469e      	mov	lr, r3
 80005fa:	4770      	bx	lr

080005fc <_fini>:
 80005fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005fe:	bf00      	nop
 8000600:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000602:	bc08      	pop	{r3}
 8000604:	469e      	mov	lr, r3
 8000606:	4770      	bx	lr
