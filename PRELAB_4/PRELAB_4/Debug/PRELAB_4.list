
PRELAB_4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001c4  080001f0  080001f0  000101f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003b4  080003b4  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003b4  080003b4  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  080003b4  080003b4  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003b4  080003b4  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003b4  080003b4  000103b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003b8  080003b8  000103b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  080003bc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000004  080003c0  00020004  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000024  080003c0  00020024  2**0
                  ALLOC
 11 .ARM.attributes 00000036  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000103  00000000  00000000  0002003a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000009e  00000000  00000000  0002013d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  000201e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000030  00000000  00000000  00020228  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000f64  00000000  00000000  00020258  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000471  00000000  00000000  000211bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003c4f  00000000  00000000  0002162d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002527c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000058  00000000  00000000  000252cc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001f0 <__do_global_dtors_aux>:
 80001f0:	b510      	push	{r4, lr}
 80001f2:	4c05      	ldr	r4, [pc, #20]	; (8000208 <__do_global_dtors_aux+0x18>)
 80001f4:	7823      	ldrb	r3, [r4, #0]
 80001f6:	b933      	cbnz	r3, 8000206 <__do_global_dtors_aux+0x16>
 80001f8:	4b04      	ldr	r3, [pc, #16]	; (800020c <__do_global_dtors_aux+0x1c>)
 80001fa:	b113      	cbz	r3, 8000202 <__do_global_dtors_aux+0x12>
 80001fc:	4804      	ldr	r0, [pc, #16]	; (8000210 <__do_global_dtors_aux+0x20>)
 80001fe:	e000      	b.n	8000202 <__do_global_dtors_aux+0x12>
 8000200:	bf00      	nop
 8000202:	2301      	movs	r3, #1
 8000204:	7023      	strb	r3, [r4, #0]
 8000206:	bd10      	pop	{r4, pc}
 8000208:	20000004 	.word	0x20000004
 800020c:	00000000 	.word	0x00000000
 8000210:	0800039c 	.word	0x0800039c

08000214 <frame_dummy>:
 8000214:	b508      	push	{r3, lr}
 8000216:	4b03      	ldr	r3, [pc, #12]	; (8000224 <frame_dummy+0x10>)
 8000218:	b11b      	cbz	r3, 8000222 <frame_dummy+0xe>
 800021a:	4903      	ldr	r1, [pc, #12]	; (8000228 <frame_dummy+0x14>)
 800021c:	4803      	ldr	r0, [pc, #12]	; (800022c <frame_dummy+0x18>)
 800021e:	e000      	b.n	8000222 <frame_dummy+0xe>
 8000220:	bf00      	nop
 8000222:	bd08      	pop	{r3, pc}
 8000224:	00000000 	.word	0x00000000
 8000228:	20000008 	.word	0x20000008
 800022c:	0800039c 	.word	0x0800039c

08000230 <main>:
#define LED1_ODR *((uint32_t*)( 0x42020414))
#define LED2_ODR *((uint32_t*)( 0x42020814))
#define PUSHBUTTON_IDR *((uint32_t*)( 0x42020810))


int main(void) {
 8000230:	b480      	push	{r7}
 8000232:	b083      	sub	sp, #12
 8000234:	af00      	add	r7, sp, #0

	RCC_AHB2ENR |= 1<<1;
 8000236:	4b2c      	ldr	r3, [pc, #176]	; (80002e8 <main+0xb8>)
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	4a2b      	ldr	r2, [pc, #172]	; (80002e8 <main+0xb8>)
 800023c:	f043 0302 	orr.w	r3, r3, #2
 8000240:	6013      	str	r3, [r2, #0]
	RCC_AHB2ENR |= 1<<2;
 8000242:	4b29      	ldr	r3, [pc, #164]	; (80002e8 <main+0xb8>)
 8000244:	681b      	ldr	r3, [r3, #0]
 8000246:	4a28      	ldr	r2, [pc, #160]	; (80002e8 <main+0xb8>)
 8000248:	f043 0304 	orr.w	r3, r3, #4
 800024c:	6013      	str	r3, [r2, #0]
	LED1_MODER  &= ~(0x01 << 15);
 800024e:	4b27      	ldr	r3, [pc, #156]	; (80002ec <main+0xbc>)
 8000250:	681b      	ldr	r3, [r3, #0]
 8000252:	4a26      	ldr	r2, [pc, #152]	; (80002ec <main+0xbc>)
 8000254:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000258:	6013      	str	r3, [r2, #0]
	LED2_MODER  &= ~(0x01 << 15);
 800025a:	4b25      	ldr	r3, [pc, #148]	; (80002f0 <main+0xc0>)
 800025c:	681b      	ldr	r3, [r3, #0]
 800025e:	4a24      	ldr	r2, [pc, #144]	; (80002f0 <main+0xc0>)
 8000260:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000264:	6013      	str	r3, [r2, #0]
	PUSHBUTTON_MODER  &= ~(0x01 << 27);
 8000266:	4b22      	ldr	r3, [pc, #136]	; (80002f0 <main+0xc0>)
 8000268:	681b      	ldr	r3, [r3, #0]
 800026a:	4a21      	ldr	r2, [pc, #132]	; (80002f0 <main+0xc0>)
 800026c:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8000270:	6013      	str	r3, [r2, #0]
	PUSHBUTTON_MODER  &= ~(0x01 << 26);
 8000272:	4b1f      	ldr	r3, [pc, #124]	; (80002f0 <main+0xc0>)
 8000274:	681b      	ldr	r3, [r3, #0]
 8000276:	4a1e      	ldr	r2, [pc, #120]	; (80002f0 <main+0xc0>)
 8000278:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800027c:	6013      	str	r3, [r2, #0]

	while(1) {
		volatile int index;

		LED1_MODER |= (0x01 << 7);
 800027e:	4b1b      	ldr	r3, [pc, #108]	; (80002ec <main+0xbc>)
 8000280:	681b      	ldr	r3, [r3, #0]
 8000282:	4a1a      	ldr	r2, [pc, #104]	; (80002ec <main+0xbc>)
 8000284:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000288:	6013      	str	r3, [r2, #0]

		while(PUSHBUTTON_IDR & (0x01 << 13)){
 800028a:	e00b      	b.n	80002a4 <main+0x74>

		LED1_MODER &= ~(0x01 << 7);
 800028c:	4b17      	ldr	r3, [pc, #92]	; (80002ec <main+0xbc>)
 800028e:	681b      	ldr	r3, [r3, #0]
 8000290:	4a16      	ldr	r2, [pc, #88]	; (80002ec <main+0xbc>)
 8000292:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000296:	6013      	str	r3, [r2, #0]
		LED2_MODER |= (0x01 << 7);
 8000298:	4b15      	ldr	r3, [pc, #84]	; (80002f0 <main+0xc0>)
 800029a:	681b      	ldr	r3, [r3, #0]
 800029c:	4a14      	ldr	r2, [pc, #80]	; (80002f0 <main+0xc0>)
 800029e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002a2:	6013      	str	r3, [r2, #0]
		while(PUSHBUTTON_IDR & (0x01 << 13)){
 80002a4:	4b13      	ldr	r3, [pc, #76]	; (80002f4 <main+0xc4>)
 80002a6:	681b      	ldr	r3, [r3, #0]
 80002a8:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80002ac:	2b00      	cmp	r3, #0
 80002ae:	d1ed      	bne.n	800028c <main+0x5c>
		}

		LED2_MODER &= ~(0x01 << 7);
 80002b0:	4b0f      	ldr	r3, [pc, #60]	; (80002f0 <main+0xc0>)
 80002b2:	681b      	ldr	r3, [r3, #0]
 80002b4:	4a0e      	ldr	r2, [pc, #56]	; (80002f0 <main+0xc0>)
 80002b6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80002ba:	6013      	str	r3, [r2, #0]

		for(index=0;index<wait_millisecond*333;index++);
 80002bc:	2300      	movs	r3, #0
 80002be:	607b      	str	r3, [r7, #4]
 80002c0:	e002      	b.n	80002c8 <main+0x98>
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	3301      	adds	r3, #1
 80002c6:	607b      	str	r3, [r7, #4]
 80002c8:	4b0b      	ldr	r3, [pc, #44]	; (80002f8 <main+0xc8>)
 80002ca:	681b      	ldr	r3, [r3, #0]
 80002cc:	f240 124d 	movw	r2, #333	; 0x14d
 80002d0:	fb02 f303 	mul.w	r3, r2, r3
 80002d4:	687a      	ldr	r2, [r7, #4]
 80002d6:	4293      	cmp	r3, r2
 80002d8:	d8f3      	bhi.n	80002c2 <main+0x92>
		wait_counter = wait_counter + 1;
 80002da:	4b08      	ldr	r3, [pc, #32]	; (80002fc <main+0xcc>)
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	3301      	adds	r3, #1
 80002e0:	4a06      	ldr	r2, [pc, #24]	; (80002fc <main+0xcc>)
 80002e2:	6013      	str	r3, [r2, #0]
	while(1) {
 80002e4:	e7cb      	b.n	800027e <main+0x4e>
 80002e6:	bf00      	nop
 80002e8:	4002104c 	.word	0x4002104c
 80002ec:	42020400 	.word	0x42020400
 80002f0:	42020800 	.word	0x42020800
 80002f4:	42020810 	.word	0x42020810
 80002f8:	20000000 	.word	0x20000000
 80002fc:	20000020 	.word	0x20000020

08000300 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000300:	480d      	ldr	r0, [pc, #52]	; (8000338 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000302:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000304:	e000      	b.n	8000308 <Reset_Handler+0x8>
 8000306:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000308:	480c      	ldr	r0, [pc, #48]	; (800033c <LoopForever+0x6>)
  ldr r1, =_edata
 800030a:	490d      	ldr	r1, [pc, #52]	; (8000340 <LoopForever+0xa>)
  ldr r2, =_sidata
 800030c:	4a0d      	ldr	r2, [pc, #52]	; (8000344 <LoopForever+0xe>)
  movs r3, #0
 800030e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000310:	e002      	b.n	8000318 <LoopCopyDataInit>

08000312 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000312:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000314:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000316:	3304      	adds	r3, #4

08000318 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000318:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800031a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800031c:	d3f9      	bcc.n	8000312 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800031e:	4a0a      	ldr	r2, [pc, #40]	; (8000348 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000320:	4c0a      	ldr	r4, [pc, #40]	; (800034c <LoopForever+0x16>)
  movs r3, #0
 8000322:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000324:	e001      	b.n	800032a <LoopFillZerobss>

08000326 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000326:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000328:	3204      	adds	r2, #4

0800032a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800032a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800032c:	d3fb      	bcc.n	8000326 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800032e:	f000 f811 	bl	8000354 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000332:	f7ff ff7d 	bl	8000230 <main>

08000336 <LoopForever>:

LoopForever:
    b LoopForever
 8000336:	e7fe      	b.n	8000336 <LoopForever>
  ldr   r0, =_estack
 8000338:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 800033c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000340:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 8000344:	080003bc 	.word	0x080003bc
  ldr r2, =_sbss
 8000348:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 800034c:	20000024 	.word	0x20000024

08000350 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000350:	e7fe      	b.n	8000350 <ADC1_2_IRQHandler>
	...

08000354 <__libc_init_array>:
 8000354:	b570      	push	{r4, r5, r6, lr}
 8000356:	4d0d      	ldr	r5, [pc, #52]	; (800038c <__libc_init_array+0x38>)
 8000358:	2600      	movs	r6, #0
 800035a:	4c0d      	ldr	r4, [pc, #52]	; (8000390 <__libc_init_array+0x3c>)
 800035c:	1b64      	subs	r4, r4, r5
 800035e:	10a4      	asrs	r4, r4, #2
 8000360:	42a6      	cmp	r6, r4
 8000362:	d109      	bne.n	8000378 <__libc_init_array+0x24>
 8000364:	4d0b      	ldr	r5, [pc, #44]	; (8000394 <__libc_init_array+0x40>)
 8000366:	2600      	movs	r6, #0
 8000368:	4c0b      	ldr	r4, [pc, #44]	; (8000398 <__libc_init_array+0x44>)
 800036a:	f000 f817 	bl	800039c <_init>
 800036e:	1b64      	subs	r4, r4, r5
 8000370:	10a4      	asrs	r4, r4, #2
 8000372:	42a6      	cmp	r6, r4
 8000374:	d105      	bne.n	8000382 <__libc_init_array+0x2e>
 8000376:	bd70      	pop	{r4, r5, r6, pc}
 8000378:	f855 3b04 	ldr.w	r3, [r5], #4
 800037c:	3601      	adds	r6, #1
 800037e:	4798      	blx	r3
 8000380:	e7ee      	b.n	8000360 <__libc_init_array+0xc>
 8000382:	f855 3b04 	ldr.w	r3, [r5], #4
 8000386:	3601      	adds	r6, #1
 8000388:	4798      	blx	r3
 800038a:	e7f2      	b.n	8000372 <__libc_init_array+0x1e>
 800038c:	080003b4 	.word	0x080003b4
 8000390:	080003b4 	.word	0x080003b4
 8000394:	080003b4 	.word	0x080003b4
 8000398:	080003b8 	.word	0x080003b8

0800039c <_init>:
 800039c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800039e:	bf00      	nop
 80003a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003a2:	bc08      	pop	{r3}
 80003a4:	469e      	mov	lr, r3
 80003a6:	4770      	bx	lr

080003a8 <_fini>:
 80003a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003aa:	bf00      	nop
 80003ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003ae:	bc08      	pop	{r3}
 80003b0:	469e      	mov	lr, r3
 80003b2:	4770      	bx	lr
