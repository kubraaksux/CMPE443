
PRELAB_5.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000408  080001f0  080001f0  000101f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080005f8  080005f8  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080005f8  080005f8  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  080005f8  080005f8  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  080005f8  080005f8  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080005f8  080005f8  000105f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080005fc  080005fc  000105fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  08000600  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000028  20000004  08000604  00020004  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000002c  08000604  0002002c  2**0
                  ALLOC
 11 .ARM.attributes 00000036  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000211  00000000  00000000  0002003a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000c7  00000000  00000000  0002024b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  00020318  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000030  00000000  00000000  00020360  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000f52  00000000  00000000  00020390  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000517  00000000  00000000  000212e2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003c26  00000000  00000000  000217f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002541f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000054  00000000  00000000  00025470  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001f0 <__do_global_dtors_aux>:
 80001f0:	b510      	push	{r4, lr}
 80001f2:	4c05      	ldr	r4, [pc, #20]	; (8000208 <__do_global_dtors_aux+0x18>)
 80001f4:	7823      	ldrb	r3, [r4, #0]
 80001f6:	b933      	cbnz	r3, 8000206 <__do_global_dtors_aux+0x16>
 80001f8:	4b04      	ldr	r3, [pc, #16]	; (800020c <__do_global_dtors_aux+0x1c>)
 80001fa:	b113      	cbz	r3, 8000202 <__do_global_dtors_aux+0x12>
 80001fc:	4804      	ldr	r0, [pc, #16]	; (8000210 <__do_global_dtors_aux+0x20>)
 80001fe:	e000      	b.n	8000202 <__do_global_dtors_aux+0x12>
 8000200:	bf00      	nop
 8000202:	2301      	movs	r3, #1
 8000204:	7023      	strb	r3, [r4, #0]
 8000206:	bd10      	pop	{r4, pc}
 8000208:	20000004 	.word	0x20000004
 800020c:	00000000 	.word	0x00000000
 8000210:	080005e0 	.word	0x080005e0

08000214 <frame_dummy>:
 8000214:	b508      	push	{r3, lr}
 8000216:	4b03      	ldr	r3, [pc, #12]	; (8000224 <frame_dummy+0x10>)
 8000218:	b11b      	cbz	r3, 8000222 <frame_dummy+0xe>
 800021a:	4903      	ldr	r1, [pc, #12]	; (8000228 <frame_dummy+0x14>)
 800021c:	4803      	ldr	r0, [pc, #12]	; (800022c <frame_dummy+0x18>)
 800021e:	e000      	b.n	8000222 <frame_dummy+0xe>
 8000220:	bf00      	nop
 8000222:	bd08      	pop	{r3, pc}
 8000224:	00000000 	.word	0x00000000
 8000228:	20000008 	.word	0x20000008
 800022c:	080005e0 	.word	0x080005e0

08000230 <main>:
#define GPIOA	((GPIO_TypeDef *) 0x42020000)
#define GPIOB 	((GPIO_TypeDef *) 0x42020400)
#define GPIOC 	((GPIO_TypeDef *) 0x42020800)


int main(void) {
 8000230:	b480      	push	{r7}
 8000232:	af00      	add	r7, sp, #0
	RCC_AHB2ENR |= 0x01 << 0; 	//enables GPIOA
 8000234:	4b8d      	ldr	r3, [pc, #564]	; (800046c <main+0x23c>)
 8000236:	681b      	ldr	r3, [r3, #0]
 8000238:	4a8c      	ldr	r2, [pc, #560]	; (800046c <main+0x23c>)
 800023a:	f043 0301 	orr.w	r3, r3, #1
 800023e:	6013      	str	r3, [r2, #0]
	RCC_AHB2ENR |= 0x01 << 1; 	//enables GPIOB
 8000240:	4b8a      	ldr	r3, [pc, #552]	; (800046c <main+0x23c>)
 8000242:	681b      	ldr	r3, [r3, #0]
 8000244:	4a89      	ldr	r2, [pc, #548]	; (800046c <main+0x23c>)
 8000246:	f043 0302 	orr.w	r3, r3, #2
 800024a:	6013      	str	r3, [r2, #0]
	RCC_AHB2ENR |= 0x01 << 2; 	//enables GPIOC
 800024c:	4b87      	ldr	r3, [pc, #540]	; (800046c <main+0x23c>)
 800024e:	681b      	ldr	r3, [r3, #0]
 8000250:	4a86      	ldr	r2, [pc, #536]	; (800046c <main+0x23c>)
 8000252:	f043 0304 	orr.w	r3, r3, #4
 8000256:	6013      	str	r3, [r2, #0]

	GPIOA->MODER[0] &= ~(0x03); 	 	 	// PA0 input
 8000258:	4b85      	ldr	r3, [pc, #532]	; (8000470 <main+0x240>)
 800025a:	881b      	ldrh	r3, [r3, #0]
 800025c:	b29b      	uxth	r3, r3
 800025e:	4a84      	ldr	r2, [pc, #528]	; (8000470 <main+0x240>)
 8000260:	f023 0303 	bic.w	r3, r3, #3
 8000264:	b29b      	uxth	r3, r3
 8000266:	8013      	strh	r3, [r2, #0]

	GPIOA->PUPDR[0] &= ~(0x03);
 8000268:	4b81      	ldr	r3, [pc, #516]	; (8000470 <main+0x240>)
 800026a:	899b      	ldrh	r3, [r3, #12]
 800026c:	b29b      	uxth	r3, r3
 800026e:	4a80      	ldr	r2, [pc, #512]	; (8000470 <main+0x240>)
 8000270:	f023 0303 	bic.w	r3, r3, #3
 8000274:	b29b      	uxth	r3, r3
 8000276:	8193      	strh	r3, [r2, #12]
	GPIOA->PUPDR[0] |=  (0x01);
 8000278:	4b7d      	ldr	r3, [pc, #500]	; (8000470 <main+0x240>)
 800027a:	899b      	ldrh	r3, [r3, #12]
 800027c:	b29b      	uxth	r3, r3
 800027e:	4a7c      	ldr	r2, [pc, #496]	; (8000470 <main+0x240>)
 8000280:	f043 0301 	orr.w	r3, r3, #1
 8000284:	b29b      	uxth	r3, r3
 8000286:	8193      	strh	r3, [r2, #12]

	GPIOA->MODER[1] &= ~(0x03 << (1 * 2));  // PA9 output
 8000288:	4b79      	ldr	r3, [pc, #484]	; (8000470 <main+0x240>)
 800028a:	885b      	ldrh	r3, [r3, #2]
 800028c:	b29b      	uxth	r3, r3
 800028e:	4a78      	ldr	r2, [pc, #480]	; (8000470 <main+0x240>)
 8000290:	f023 030c 	bic.w	r3, r3, #12
 8000294:	b29b      	uxth	r3, r3
 8000296:	8053      	strh	r3, [r2, #2]
	GPIOA->MODER[1] |= (0x01 << (1 * 2));
 8000298:	4b75      	ldr	r3, [pc, #468]	; (8000470 <main+0x240>)
 800029a:	885b      	ldrh	r3, [r3, #2]
 800029c:	b29b      	uxth	r3, r3
 800029e:	4a74      	ldr	r2, [pc, #464]	; (8000470 <main+0x240>)
 80002a0:	f043 0304 	orr.w	r3, r3, #4
 80002a4:	b29b      	uxth	r3, r3
 80002a6:	8053      	strh	r3, [r2, #2]

	GPIOB->MODER[0] &= ~(0x03 << (7 * 2));  // PB7 output
 80002a8:	4b72      	ldr	r3, [pc, #456]	; (8000474 <main+0x244>)
 80002aa:	881b      	ldrh	r3, [r3, #0]
 80002ac:	b29b      	uxth	r3, r3
 80002ae:	4a71      	ldr	r2, [pc, #452]	; (8000474 <main+0x244>)
 80002b0:	f3c3 030d 	ubfx	r3, r3, #0, #14
 80002b4:	b29b      	uxth	r3, r3
 80002b6:	8013      	strh	r3, [r2, #0]
	GPIOB->MODER[0] |= (0x01 << (7 * 2));
 80002b8:	4b6e      	ldr	r3, [pc, #440]	; (8000474 <main+0x244>)
 80002ba:	881b      	ldrh	r3, [r3, #0]
 80002bc:	b29b      	uxth	r3, r3
 80002be:	4a6d      	ldr	r2, [pc, #436]	; (8000474 <main+0x244>)
 80002c0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80002c4:	b29b      	uxth	r3, r3
 80002c6:	8013      	strh	r3, [r2, #0]

	GPIOC->MODER[0] &= ~(0x03 << (7 * 2));  // PC7 output
 80002c8:	4b6b      	ldr	r3, [pc, #428]	; (8000478 <main+0x248>)
 80002ca:	881b      	ldrh	r3, [r3, #0]
 80002cc:	b29b      	uxth	r3, r3
 80002ce:	4a6a      	ldr	r2, [pc, #424]	; (8000478 <main+0x248>)
 80002d0:	f3c3 030d 	ubfx	r3, r3, #0, #14
 80002d4:	b29b      	uxth	r3, r3
 80002d6:	8013      	strh	r3, [r2, #0]
	GPIOC->MODER[0] |= (0x01 << (7 * 2));
 80002d8:	4b67      	ldr	r3, [pc, #412]	; (8000478 <main+0x248>)
 80002da:	881b      	ldrh	r3, [r3, #0]
 80002dc:	b29b      	uxth	r3, r3
 80002de:	4a66      	ldr	r2, [pc, #408]	; (8000478 <main+0x248>)
 80002e0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80002e4:	b29b      	uxth	r3, r3
 80002e6:	8013      	strh	r3, [r2, #0]


	while(1) {


		if((GPIOA->IDR[0] & 0x01) == 0x01){
 80002e8:	4b61      	ldr	r3, [pc, #388]	; (8000470 <main+0x240>)
 80002ea:	8a1b      	ldrh	r3, [r3, #16]
 80002ec:	b29b      	uxth	r3, r3
 80002ee:	f003 0301 	and.w	r3, r3, #1
 80002f2:	2b01      	cmp	r3, #1
 80002f4:	f040 80fe 	bne.w	80004f4 <main+0x2c4>


			if(cntr%3==0 ){
 80002f8:	4b60      	ldr	r3, [pc, #384]	; (800047c <main+0x24c>)
 80002fa:	6819      	ldr	r1, [r3, #0]
 80002fc:	4b60      	ldr	r3, [pc, #384]	; (8000480 <main+0x250>)
 80002fe:	fba3 2301 	umull	r2, r3, r3, r1
 8000302:	085a      	lsrs	r2, r3, #1
 8000304:	4613      	mov	r3, r2
 8000306:	005b      	lsls	r3, r3, #1
 8000308:	4413      	add	r3, r2
 800030a:	1aca      	subs	r2, r1, r3
 800030c:	2a00      	cmp	r2, #0
 800030e:	d143      	bne.n	8000398 <main+0x168>

				GPIOA->ODR[0] |= (0x01 << 9);
 8000310:	4b57      	ldr	r3, [pc, #348]	; (8000470 <main+0x240>)
 8000312:	8a9b      	ldrh	r3, [r3, #20]
 8000314:	b29b      	uxth	r3, r3
 8000316:	4a56      	ldr	r2, [pc, #344]	; (8000470 <main+0x240>)
 8000318:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800031c:	b29b      	uxth	r3, r3
 800031e:	8293      	strh	r3, [r2, #20]
				GPIOB->ODR[0] &= ~(0x01 << 7);
 8000320:	4b54      	ldr	r3, [pc, #336]	; (8000474 <main+0x244>)
 8000322:	8a9b      	ldrh	r3, [r3, #20]
 8000324:	b29b      	uxth	r3, r3
 8000326:	4a53      	ldr	r2, [pc, #332]	; (8000474 <main+0x244>)
 8000328:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800032c:	b29b      	uxth	r3, r3
 800032e:	8293      	strh	r3, [r2, #20]
				GPIOC->ODR[0] &= ~(0x01 << 7);
 8000330:	4b51      	ldr	r3, [pc, #324]	; (8000478 <main+0x248>)
 8000332:	8a9b      	ldrh	r3, [r3, #20]
 8000334:	b29b      	uxth	r3, r3
 8000336:	4a50      	ldr	r2, [pc, #320]	; (8000478 <main+0x248>)
 8000338:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800033c:	b29b      	uxth	r3, r3
 800033e:	8293      	strh	r3, [r2, #20]

				for( ;index<wait_milisecond*333;index++){
 8000340:	e00b      	b.n	800035a <main+0x12a>

					if((GPIOA->IDR[0] & 0x01) != 0x01){
 8000342:	4b4b      	ldr	r3, [pc, #300]	; (8000470 <main+0x240>)
 8000344:	8a1b      	ldrh	r3, [r3, #16]
 8000346:	b29b      	uxth	r3, r3
 8000348:	f003 0301 	and.w	r3, r3, #1
 800034c:	2b01      	cmp	r3, #1
 800034e:	d10f      	bne.n	8000370 <main+0x140>
				for( ;index<wait_milisecond*333;index++){
 8000350:	4b4c      	ldr	r3, [pc, #304]	; (8000484 <main+0x254>)
 8000352:	681b      	ldr	r3, [r3, #0]
 8000354:	3301      	adds	r3, #1
 8000356:	4a4b      	ldr	r2, [pc, #300]	; (8000484 <main+0x254>)
 8000358:	6013      	str	r3, [r2, #0]
 800035a:	4b4b      	ldr	r3, [pc, #300]	; (8000488 <main+0x258>)
 800035c:	681b      	ldr	r3, [r3, #0]
 800035e:	f240 124d 	movw	r2, #333	; 0x14d
 8000362:	fb03 f202 	mul.w	r2, r3, r2
 8000366:	4b47      	ldr	r3, [pc, #284]	; (8000484 <main+0x254>)
 8000368:	681b      	ldr	r3, [r3, #0]
 800036a:	429a      	cmp	r2, r3
 800036c:	d8e9      	bhi.n	8000342 <main+0x112>
 800036e:	e000      	b.n	8000372 <main+0x142>

						break;
 8000370:	bf00      	nop
					}
				}
				if(index >= wait_milisecond*333){
 8000372:	4b45      	ldr	r3, [pc, #276]	; (8000488 <main+0x258>)
 8000374:	681b      	ldr	r3, [r3, #0]
 8000376:	f240 124d 	movw	r2, #333	; 0x14d
 800037a:	fb03 f202 	mul.w	r2, r3, r2
 800037e:	4b41      	ldr	r3, [pc, #260]	; (8000484 <main+0x254>)
 8000380:	681b      	ldr	r3, [r3, #0]
 8000382:	429a      	cmp	r2, r3
 8000384:	d8b0      	bhi.n	80002e8 <main+0xb8>

					cntr++;
 8000386:	4b3d      	ldr	r3, [pc, #244]	; (800047c <main+0x24c>)
 8000388:	681b      	ldr	r3, [r3, #0]
 800038a:	3301      	adds	r3, #1
 800038c:	4a3b      	ldr	r2, [pc, #236]	; (800047c <main+0x24c>)
 800038e:	6013      	str	r3, [r2, #0]
					index=0;
 8000390:	4b3c      	ldr	r3, [pc, #240]	; (8000484 <main+0x254>)
 8000392:	2200      	movs	r2, #0
 8000394:	601a      	str	r2, [r3, #0]
 8000396:	e7a7      	b.n	80002e8 <main+0xb8>
				}
			}else if(cntr%3==1){
 8000398:	4b38      	ldr	r3, [pc, #224]	; (800047c <main+0x24c>)
 800039a:	6819      	ldr	r1, [r3, #0]
 800039c:	4b38      	ldr	r3, [pc, #224]	; (8000480 <main+0x250>)
 800039e:	fba3 2301 	umull	r2, r3, r3, r1
 80003a2:	085a      	lsrs	r2, r3, #1
 80003a4:	4613      	mov	r3, r2
 80003a6:	005b      	lsls	r3, r3, #1
 80003a8:	4413      	add	r3, r2
 80003aa:	1aca      	subs	r2, r1, r3
 80003ac:	2a01      	cmp	r2, #1
 80003ae:	d144      	bne.n	800043a <main+0x20a>

				GPIOA->ODR[0] &= ~(0x01 << 9);
 80003b0:	4b2f      	ldr	r3, [pc, #188]	; (8000470 <main+0x240>)
 80003b2:	8a9b      	ldrh	r3, [r3, #20]
 80003b4:	b29b      	uxth	r3, r3
 80003b6:	4a2e      	ldr	r2, [pc, #184]	; (8000470 <main+0x240>)
 80003b8:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80003bc:	b29b      	uxth	r3, r3
 80003be:	8293      	strh	r3, [r2, #20]
				GPIOB->ODR[0] |= (0x01 << 7);
 80003c0:	4b2c      	ldr	r3, [pc, #176]	; (8000474 <main+0x244>)
 80003c2:	8a9b      	ldrh	r3, [r3, #20]
 80003c4:	b29b      	uxth	r3, r3
 80003c6:	4a2b      	ldr	r2, [pc, #172]	; (8000474 <main+0x244>)
 80003c8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003cc:	b29b      	uxth	r3, r3
 80003ce:	8293      	strh	r3, [r2, #20]
				GPIOC->ODR[0] &= ~(0x01 << 7);
 80003d0:	4b29      	ldr	r3, [pc, #164]	; (8000478 <main+0x248>)
 80003d2:	8a9b      	ldrh	r3, [r3, #20]
 80003d4:	b29b      	uxth	r3, r3
 80003d6:	4a28      	ldr	r2, [pc, #160]	; (8000478 <main+0x248>)
 80003d8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80003dc:	b29b      	uxth	r3, r3
 80003de:	8293      	strh	r3, [r2, #20]

				for( ;index<wait_milisecond*333;index++){
 80003e0:	e00b      	b.n	80003fa <main+0x1ca>

					if((GPIOA->IDR[0] & 0x01) != 0x01){
 80003e2:	4b23      	ldr	r3, [pc, #140]	; (8000470 <main+0x240>)
 80003e4:	8a1b      	ldrh	r3, [r3, #16]
 80003e6:	b29b      	uxth	r3, r3
 80003e8:	f003 0301 	and.w	r3, r3, #1
 80003ec:	2b01      	cmp	r3, #1
 80003ee:	d10f      	bne.n	8000410 <main+0x1e0>
				for( ;index<wait_milisecond*333;index++){
 80003f0:	4b24      	ldr	r3, [pc, #144]	; (8000484 <main+0x254>)
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	3301      	adds	r3, #1
 80003f6:	4a23      	ldr	r2, [pc, #140]	; (8000484 <main+0x254>)
 80003f8:	6013      	str	r3, [r2, #0]
 80003fa:	4b23      	ldr	r3, [pc, #140]	; (8000488 <main+0x258>)
 80003fc:	681b      	ldr	r3, [r3, #0]
 80003fe:	f240 124d 	movw	r2, #333	; 0x14d
 8000402:	fb03 f202 	mul.w	r2, r3, r2
 8000406:	4b1f      	ldr	r3, [pc, #124]	; (8000484 <main+0x254>)
 8000408:	681b      	ldr	r3, [r3, #0]
 800040a:	429a      	cmp	r2, r3
 800040c:	d8e9      	bhi.n	80003e2 <main+0x1b2>
 800040e:	e000      	b.n	8000412 <main+0x1e2>

						break;
 8000410:	bf00      	nop
					}
				}
				if(index>=wait_milisecond*333){
 8000412:	4b1d      	ldr	r3, [pc, #116]	; (8000488 <main+0x258>)
 8000414:	681b      	ldr	r3, [r3, #0]
 8000416:	f240 124d 	movw	r2, #333	; 0x14d
 800041a:	fb03 f202 	mul.w	r2, r3, r2
 800041e:	4b19      	ldr	r3, [pc, #100]	; (8000484 <main+0x254>)
 8000420:	681b      	ldr	r3, [r3, #0]
 8000422:	429a      	cmp	r2, r3
 8000424:	f63f af60 	bhi.w	80002e8 <main+0xb8>

					cntr++;
 8000428:	4b14      	ldr	r3, [pc, #80]	; (800047c <main+0x24c>)
 800042a:	681b      	ldr	r3, [r3, #0]
 800042c:	3301      	adds	r3, #1
 800042e:	4a13      	ldr	r2, [pc, #76]	; (800047c <main+0x24c>)
 8000430:	6013      	str	r3, [r2, #0]
					index=0;
 8000432:	4b14      	ldr	r3, [pc, #80]	; (8000484 <main+0x254>)
 8000434:	2200      	movs	r2, #0
 8000436:	601a      	str	r2, [r3, #0]
 8000438:	e756      	b.n	80002e8 <main+0xb8>
				}

			}else{

				GPIOA->ODR[0] &= ~(0x01 << 9);
 800043a:	4b0d      	ldr	r3, [pc, #52]	; (8000470 <main+0x240>)
 800043c:	8a9b      	ldrh	r3, [r3, #20]
 800043e:	b29b      	uxth	r3, r3
 8000440:	4a0b      	ldr	r2, [pc, #44]	; (8000470 <main+0x240>)
 8000442:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8000446:	b29b      	uxth	r3, r3
 8000448:	8293      	strh	r3, [r2, #20]
				GPIOB->ODR[0] &= ~(0x01 << 7);
 800044a:	4b0a      	ldr	r3, [pc, #40]	; (8000474 <main+0x244>)
 800044c:	8a9b      	ldrh	r3, [r3, #20]
 800044e:	b29b      	uxth	r3, r3
 8000450:	4a08      	ldr	r2, [pc, #32]	; (8000474 <main+0x244>)
 8000452:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000456:	b29b      	uxth	r3, r3
 8000458:	8293      	strh	r3, [r2, #20]
				GPIOC->ODR[0] |= (0x01 << 7);
 800045a:	4b07      	ldr	r3, [pc, #28]	; (8000478 <main+0x248>)
 800045c:	8a9b      	ldrh	r3, [r3, #20]
 800045e:	b29b      	uxth	r3, r3
 8000460:	4a05      	ldr	r2, [pc, #20]	; (8000478 <main+0x248>)
 8000462:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000466:	b29b      	uxth	r3, r3
 8000468:	8293      	strh	r3, [r2, #20]

				for( ;index<wait_milisecond*333;index++){
 800046a:	e01b      	b.n	80004a4 <main+0x274>
 800046c:	4002104c 	.word	0x4002104c
 8000470:	42020000 	.word	0x42020000
 8000474:	42020400 	.word	0x42020400
 8000478:	42020800 	.word	0x42020800
 800047c:	20000024 	.word	0x20000024
 8000480:	aaaaaaab 	.word	0xaaaaaaab
 8000484:	20000028 	.word	0x20000028
 8000488:	20000000 	.word	0x20000000

					if((GPIOA->IDR[0] & 0x01) != 0x01){
 800048c:	4b26      	ldr	r3, [pc, #152]	; (8000528 <main+0x2f8>)
 800048e:	8a1b      	ldrh	r3, [r3, #16]
 8000490:	b29b      	uxth	r3, r3
 8000492:	f003 0301 	and.w	r3, r3, #1
 8000496:	2b01      	cmp	r3, #1
 8000498:	d10f      	bne.n	80004ba <main+0x28a>
				for( ;index<wait_milisecond*333;index++){
 800049a:	4b24      	ldr	r3, [pc, #144]	; (800052c <main+0x2fc>)
 800049c:	681b      	ldr	r3, [r3, #0]
 800049e:	3301      	adds	r3, #1
 80004a0:	4a22      	ldr	r2, [pc, #136]	; (800052c <main+0x2fc>)
 80004a2:	6013      	str	r3, [r2, #0]
 80004a4:	4b22      	ldr	r3, [pc, #136]	; (8000530 <main+0x300>)
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	f240 124d 	movw	r2, #333	; 0x14d
 80004ac:	fb03 f202 	mul.w	r2, r3, r2
 80004b0:	4b1e      	ldr	r3, [pc, #120]	; (800052c <main+0x2fc>)
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	429a      	cmp	r2, r3
 80004b6:	d8e9      	bhi.n	800048c <main+0x25c>
 80004b8:	e000      	b.n	80004bc <main+0x28c>

						break;
 80004ba:	bf00      	nop
					}
				}

				if(index>=wait_milisecond*333){
 80004bc:	4b1c      	ldr	r3, [pc, #112]	; (8000530 <main+0x300>)
 80004be:	681b      	ldr	r3, [r3, #0]
 80004c0:	f240 124d 	movw	r2, #333	; 0x14d
 80004c4:	fb03 f202 	mul.w	r2, r3, r2
 80004c8:	4b18      	ldr	r3, [pc, #96]	; (800052c <main+0x2fc>)
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	429a      	cmp	r2, r3
 80004ce:	f63f af0b 	bhi.w	80002e8 <main+0xb8>

					cntr++;
 80004d2:	4b18      	ldr	r3, [pc, #96]	; (8000534 <main+0x304>)
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	3301      	adds	r3, #1
 80004d8:	4a16      	ldr	r2, [pc, #88]	; (8000534 <main+0x304>)
 80004da:	6013      	str	r3, [r2, #0]
					index=0;
 80004dc:	4b13      	ldr	r3, [pc, #76]	; (800052c <main+0x2fc>)
 80004de:	2200      	movs	r2, #0
 80004e0:	601a      	str	r2, [r3, #0]

					__asm volatile("MOV R12, %0" : :"r"(wait_counter));
 80004e2:	4b15      	ldr	r3, [pc, #84]	; (8000538 <main+0x308>)
 80004e4:	681b      	ldr	r3, [r3, #0]
 80004e6:	469c      	mov	ip, r3
					__asm volatile("ADDS R12, #0x01");
 80004e8:	f11c 0c01 	adds.w	ip, ip, #1
					__asm volatile("MOV %0, R12" : "=r"(wait_counter));
 80004ec:	4663      	mov	r3, ip
 80004ee:	4a12      	ldr	r2, [pc, #72]	; (8000538 <main+0x308>)
 80004f0:	6013      	str	r3, [r2, #0]
 80004f2:	e6f9      	b.n	80002e8 <main+0xb8>

				}
			}
		}else{

				GPIOA->ODR[0] &= ~(0x01 << 9);
 80004f4:	4b0c      	ldr	r3, [pc, #48]	; (8000528 <main+0x2f8>)
 80004f6:	8a9b      	ldrh	r3, [r3, #20]
 80004f8:	b29b      	uxth	r3, r3
 80004fa:	4a0b      	ldr	r2, [pc, #44]	; (8000528 <main+0x2f8>)
 80004fc:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8000500:	b29b      	uxth	r3, r3
 8000502:	8293      	strh	r3, [r2, #20]
				GPIOB->ODR[0] &= ~(0x01 << 7);
 8000504:	4b0d      	ldr	r3, [pc, #52]	; (800053c <main+0x30c>)
 8000506:	8a9b      	ldrh	r3, [r3, #20]
 8000508:	b29b      	uxth	r3, r3
 800050a:	4a0c      	ldr	r2, [pc, #48]	; (800053c <main+0x30c>)
 800050c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000510:	b29b      	uxth	r3, r3
 8000512:	8293      	strh	r3, [r2, #20]
				GPIOC->ODR[0] &= ~(0x01 << 7);
 8000514:	4b0a      	ldr	r3, [pc, #40]	; (8000540 <main+0x310>)
 8000516:	8a9b      	ldrh	r3, [r3, #20]
 8000518:	b29b      	uxth	r3, r3
 800051a:	4a09      	ldr	r2, [pc, #36]	; (8000540 <main+0x310>)
 800051c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000520:	b29b      	uxth	r3, r3
 8000522:	8293      	strh	r3, [r2, #20]
		if((GPIOA->IDR[0] & 0x01) == 0x01){
 8000524:	e6e0      	b.n	80002e8 <main+0xb8>
 8000526:	bf00      	nop
 8000528:	42020000 	.word	0x42020000
 800052c:	20000028 	.word	0x20000028
 8000530:	20000000 	.word	0x20000000
 8000534:	20000024 	.word	0x20000024
 8000538:	20000020 	.word	0x20000020
 800053c:	42020400 	.word	0x42020400
 8000540:	42020800 	.word	0x42020800

08000544 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000544:	480d      	ldr	r0, [pc, #52]	; (800057c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000546:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000548:	e000      	b.n	800054c <Reset_Handler+0x8>
 800054a:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800054c:	480c      	ldr	r0, [pc, #48]	; (8000580 <LoopForever+0x6>)
  ldr r1, =_edata
 800054e:	490d      	ldr	r1, [pc, #52]	; (8000584 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000550:	4a0d      	ldr	r2, [pc, #52]	; (8000588 <LoopForever+0xe>)
  movs r3, #0
 8000552:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000554:	e002      	b.n	800055c <LoopCopyDataInit>

08000556 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000556:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000558:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800055a:	3304      	adds	r3, #4

0800055c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800055c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800055e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000560:	d3f9      	bcc.n	8000556 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000562:	4a0a      	ldr	r2, [pc, #40]	; (800058c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000564:	4c0a      	ldr	r4, [pc, #40]	; (8000590 <LoopForever+0x16>)
  movs r3, #0
 8000566:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000568:	e001      	b.n	800056e <LoopFillZerobss>

0800056a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800056a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800056c:	3204      	adds	r2, #4

0800056e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800056e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000570:	d3fb      	bcc.n	800056a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000572:	f000 f811 	bl	8000598 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000576:	f7ff fe5b 	bl	8000230 <main>

0800057a <LoopForever>:

LoopForever:
    b LoopForever
 800057a:	e7fe      	b.n	800057a <LoopForever>
  ldr   r0, =_estack
 800057c:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 8000580:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000584:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 8000588:	08000600 	.word	0x08000600
  ldr r2, =_sbss
 800058c:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 8000590:	2000002c 	.word	0x2000002c

08000594 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000594:	e7fe      	b.n	8000594 <ADC1_2_IRQHandler>
	...

08000598 <__libc_init_array>:
 8000598:	b570      	push	{r4, r5, r6, lr}
 800059a:	4d0d      	ldr	r5, [pc, #52]	; (80005d0 <__libc_init_array+0x38>)
 800059c:	2600      	movs	r6, #0
 800059e:	4c0d      	ldr	r4, [pc, #52]	; (80005d4 <__libc_init_array+0x3c>)
 80005a0:	1b64      	subs	r4, r4, r5
 80005a2:	10a4      	asrs	r4, r4, #2
 80005a4:	42a6      	cmp	r6, r4
 80005a6:	d109      	bne.n	80005bc <__libc_init_array+0x24>
 80005a8:	4d0b      	ldr	r5, [pc, #44]	; (80005d8 <__libc_init_array+0x40>)
 80005aa:	2600      	movs	r6, #0
 80005ac:	4c0b      	ldr	r4, [pc, #44]	; (80005dc <__libc_init_array+0x44>)
 80005ae:	f000 f817 	bl	80005e0 <_init>
 80005b2:	1b64      	subs	r4, r4, r5
 80005b4:	10a4      	asrs	r4, r4, #2
 80005b6:	42a6      	cmp	r6, r4
 80005b8:	d105      	bne.n	80005c6 <__libc_init_array+0x2e>
 80005ba:	bd70      	pop	{r4, r5, r6, pc}
 80005bc:	f855 3b04 	ldr.w	r3, [r5], #4
 80005c0:	3601      	adds	r6, #1
 80005c2:	4798      	blx	r3
 80005c4:	e7ee      	b.n	80005a4 <__libc_init_array+0xc>
 80005c6:	f855 3b04 	ldr.w	r3, [r5], #4
 80005ca:	3601      	adds	r6, #1
 80005cc:	4798      	blx	r3
 80005ce:	e7f2      	b.n	80005b6 <__libc_init_array+0x1e>
 80005d0:	080005f8 	.word	0x080005f8
 80005d4:	080005f8 	.word	0x080005f8
 80005d8:	080005f8 	.word	0x080005f8
 80005dc:	080005fc 	.word	0x080005fc

080005e0 <_init>:
 80005e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005e2:	bf00      	nop
 80005e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005e6:	bc08      	pop	{r3}
 80005e8:	469e      	mov	lr, r3
 80005ea:	4770      	bx	lr

080005ec <_fini>:
 80005ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005ee:	bf00      	nop
 80005f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005f2:	bc08      	pop	{r3}
 80005f4:	469e      	mov	lr, r3
 80005f6:	4770      	bx	lr
